import hashlib
import os

from adapter.database.postgres import pg_connection
from psycopg2.extras import execute_values
import csv


def import_geoapp_database():
    conn = pg_connection()
    with conn.cursor() as cur:

        # Create and populate postal_codes table
        cur.execute("""DROP TABLE IF EXISTS postal_codes; CREATE TABLE IF NOT EXISTS postal_codes (
                id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                did INTEGER UNIQUE NOT NULL,
                code INTEGER UNIQUE NOT NULL,
                geometry TEXT NOT NULL
            );""")

        values = []
        with open('data/postal_codes.csv', newline='') as csvfile:
            postal_code_reader = csv.DictReader(csvfile)
            for row in postal_code_reader:
                values.append([row['id'], row['code'], row['the_geom']])

        execute_values(cur, "INSERT INTO postal_codes(did, code, geometry) VALUES %s", values)

        # Create and populate paystats table
        cur.execute("""DROP TABLE IF EXISTS paystats; CREATE TABLE IF NOT EXISTS paystats (
                id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                did INTEGER UNIQUE NOT NULL,
                amount FLOAT(8) NOT NULL,
                p_month DATE NOT NULL,
                p_age VARCHAR(6) NOT NULL ,
                p_gender CHAR NOT NULL,
                postal_code_id INTEGER NOT NULL
            );""")

        values = []
        with open('data/paystats.csv', newline='') as csvfile:
            postal_code_reader = csv.DictReader(csvfile)
            for row in postal_code_reader:
                values.append([row['id'], row['amount'], row['p_month'], row['p_age'], row['p_gender'], row['postal_code_id']])

        execute_values(cur, "INSERT INTO paystats(did, amount, p_month, p_age, p_gender, postal_code_id) VALUES %s", values)

        # Create and populate paystats table
        cur.execute("""DROP TABLE IF EXISTS users; CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                username VARCHAR (48),
                password BYTEA,
                salt BYTEA
            );""")

        values = []
        with open('data/users.csv', newline='') as csvfile:
            postal_code_reader = csv.DictReader(csvfile)
            for row in postal_code_reader:
                salt = os.urandom(32)
                user_password = row['password']
                key = hashlib.pbkdf2_hmac('sha256', user_password.encode('utf-8'), salt, 100000, dklen=128)

                values.append([row['username'], key, salt])

        execute_values(cur, "INSERT INTO users(username, password, salt) VALUES %s", values)

    conn.commit()
    conn.close()
